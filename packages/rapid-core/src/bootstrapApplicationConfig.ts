import { RpdApplicationConfig } from "./types";

export default {
  code: "default",
  name: "default",
  models: [
    {
      maintainedBy: "metaManager",
      namespace: "meta",
      name: "model",
      singularCode: "model",
      pluralCode: "models",
      schema: "public",
      tableName: "meta_models",
      properties: [
        {
          name: "id",
          code: "id",
          columnName: "id",
          type: "integer",
          required: true,
          autoIncrement: true,
        },
        {
          name: "name",
          code: "name",
          columnName: "name",
          type: "text",
          required: true,
        },
        {
          name: "description",
          code: "description",
          columnName: "description",
          type: "text",
          required: false,
        },
        {
          name: "singular code",
          code: "singularCode",
          columnName: "singular_code",
          type: "text",
          required: true,
        },
        {
          name: "plural code",
          code: "pluralCode",
          columnName: "plural_code",
          type: "text",
          required: true,
        },
        {
          name: "schema",
          code: "schema",
          columnName: "schema",
          type: "text",
          required: false,
        },
        {
          name: "table name",
          code: "tableName",
          columnName: "table_name",
          type: "text",
          required: true,
        },
        {
          name: "namespace",
          code: "namespace",
          columnName: "namespace",
          type: "text",
          required: true,
        },
        {
          name: "base",
          code: "base",
          columnName: "base",
          type: "text",
          required: false,
        },
        {
          name: "derivedType",
          code: "derivedType",
          columnName: "derived_type",
          type: "text",
          required: false,
        },
        {
          name: "derivedTypePropertyCode",
          code: "derivedTypePropertyCode",
          columnName: "derived_type_property_code",
          type: "text",
          required: false,
        },
        {
          name: "properties",
          code: "properties",
          type: "relation[]",
          relation: "many",
          targetSingularCode: "property",
          selfIdColumnName: "model_id",
        },
      ],
    },
    {
      maintainedBy: "metaManager",
      namespace: "meta",
      name: "property",
      singularCode: "property",
      pluralCode: "properties",
      schema: "public",
      tableName: "meta_properties",
      properties: [
        {
          name: "id",
          code: "id",
          columnName: "id",
          type: "integer",
          required: true,
          autoIncrement: true,
        },
        {
          name: "model",
          code: "model",
          type: "relation",
          required: true,
          relation: "one",
          targetSingularCode: "model",
          targetIdColumnName: "model_id",
        },
        {
          name: "name",
          code: "name",
          columnName: "name",
          type: "text",
          required: true,
        },
        {
          name: "code",
          code: "code",
          columnName: "code",
          type: "text",
          required: true,
        },
        {
          name: "description",
          code: "description",
          columnName: "description",
          type: "text",
          required: false,
        },
        {
          name: "column name",
          code: "columnName",
          columnName: "column_name",
          type: "text",
          required: false,
        },
        {
          name: "type",
          code: "type",
          columnName: "type",
          type: "text",
          required: true,
        },
        {
          name: "required",
          code: "required",
          columnName: "required",
          type: "boolean",
          required: true,
          defaultValue: "false",
        },
        {
          name: "default value",
          code: "defaultValue",
          columnName: "default_value",
          type: "text",
          required: false,
        },
        {
          name: "config",
          code: "config",
          columnName: "config",
          type: "json",
          required: false,
        },
        {
          name: "auto increment",
          code: "autoIncrement",
          columnName: "auto_increment",
          type: "boolean",
          required: true,
          defaultValue: "false",
        },
        {
          name: "min length",
          code: "minLength",
          columnName: "min_length",
          type: "integer",
          required: false,
        },
        {
          name: "max length",
          code: "maxLength",
          columnName: "max_length",
          type: "integer",
          required: false,
        },
        {
          name: "relation",
          code: "relation",
          columnName: "relation",
          type: "text",
          required: false,
        },
        {
          name: "target singular code",
          code: "targetSingularCode",
          columnName: "target_singular_code",
          type: "text",
          required: false,
        },
        {
          name: "target id column name",
          code: "targetIdColumnName",
          columnName: "target_id_column_name",
          type: "text",
          required: false,
        },
        {
          name: "self id column name",
          code: "selfIdColumnName",
          columnName: "self_id_column_name",
          type: "text",
          required: false,
        },
        {
          name: "link schema",
          code: "linkSchema",
          columnName: "link_schema",
          type: "text",
          required: false,
        },
        {
          name: "link table name",
          code: "linkTableName",
          columnName: "link_table_name",
          type: "text",
          required: false,
        },
        {
          name: "data dictionary",
          code: "dataDictionary",
          columnName: "data_dictionary",
          type: "text",
          required: false,
        },
      ],
    },
    {
      maintainedBy: "metaManager",
      namespace: "meta",
      name: "data dictionary",
      singularCode: "data_dictionary",
      pluralCode: "data_dictionaries",
      schema: "public",
      tableName: "meta_data_dictionaries",
      properties: [
        {
          name: "id",
          code: "id",
          columnName: "id",
          type: "integer",
          required: true,
          autoIncrement: true,
        },
        {
          name: "code",
          code: "code",
          columnName: "code",
          type: "text",
          required: true,
        },
        {
          name: "name",
          code: "name",
          columnName: "name",
          type: "text",
          required: true,
        },
        {
          name: "valueType",
          code: "valueType",
          columnName: "value_type",
          type: "text",
          required: true,
        },
        {
          name: "level",
          code: "level",
          columnName: "level",
          type: "text",
          required: false,
          defaultValue: "'app'",
        },
        {
          name: "description",
          code: "description",
          columnName: "description",
          type: "text",
          required: false,
        },
        {
          name: "source",
          code: "source",
          columnName: "source",
          type: "text",
          required: false,
        },
        {
          name: "externalId",
          code: "externalId",
          columnName: "external_id",
          type: "text",
          required: false,
        },
        {
          name: "externalData",
          code: "externalData",
          columnName: "external_data",
          type: "json",
          required: false,
        },
        {
          name: "state",
          code: "state",
          columnName: "state",
          type: "text",
          required: false,
        },
        {
          name: "entries",
          code: "entries",
          type: "relation[]",
          relation: "many",
          targetSingularCode: "data_dictionary_entry",
          selfIdColumnName: "dictionary_id",
        },
      ],
    },
    {
      maintainedBy: "metaManager",
      namespace: "meta",
      name: "data dictionary entry",
      singularCode: "data_dictionary_entry",
      pluralCode: "data_dictionary_entries",
      schema: "public",
      tableName: "meta_data_dictionary_entries",
      properties: [
        {
          name: "id",
          code: "id",
          columnName: "id",
          type: "integer",
          required: true,
          autoIncrement: true,
        },
        {
          name: "dictionary",
          code: "dictionary",
          type: "relation",
          relation: "one",
          targetSingularCode: "data_dictionary",
          targetIdColumnName: "dictionary_id",
        },
        {
          name: "order number",
          code: "orderNum",
          columnName: "order_num",
          type: "integer",
          required: true,
          defaultValue: "0",
        },
        {
          name: "name",
          code: "name",
          columnName: "name",
          type: "text",
          required: true,
        },
        {
          name: "value",
          code: "value",
          columnName: "value",
          type: "text",
          required: true,
        },
        {
          name: "color",
          code: "color",
          columnName: "color",
          type: "text",
          required: false,
        },
        {
          name: "icon",
          code: "icon",
          columnName: "icon",
          type: "text",
          required: false,
        },
        {
          name: "description",
          code: "description",
          columnName: "description",
          type: "text",
          required: false,
        },
        {
          name: "disabled",
          code: "disabled",
          columnName: "disabled",
          type: "boolean",
          required: false,
        },
      ],
    },
    {
      maintainedBy: "dataManager",
      namespace: "meta",
      name: "routes",
      singularCode: "route",
      pluralCode: "routes",
      schema: "public",
      tableName: "meta_routes",
      properties: [
        {
          name: "id",
          code: "id",
          columnName: "id",
          type: "integer",
          required: true,
          autoIncrement: true,
        },
        {
          name: "namespace",
          code: "namespace",
          columnName: "namespace",
          type: "text",
          required: true,
        },
        {
          name: "code",
          code: "code",
          columnName: "code",
          type: "text",
          required: true,
        },
        {
          name: "name",
          code: "name",
          columnName: "name",
          type: "text",
          required: true,
        },
        {
          name: "description",
          code: "description",
          columnName: "description",
          type: "text",
          required: false,
        },
        {
          name: "type",
          code: "type",
          columnName: "type",
          type: "text",
          required: true,
        },
        {
          name: "method",
          code: "method",
          columnName: "method",
          type: "text",
          required: true,
        },
        {
          name: "endpoint",
          code: "endpoint",
          columnName: "endpoint",
          type: "text",
          required: true,
        },
        {
          name: "actions",
          code: "actions",
          columnName: "actions",
          type: "json",
          required: true,
        },
      ],
    },
  ],
  routes: [
    {
      namespace: "meta",
      name: "meta.model.list",
      code: "meta.model.list",
      type: "RESTful",
      method: "GET",
      endpoint: "/_meta/models",
      actions: [
        {
          code: "listMetaModels",
        },
      ],
    },
    {
      namespace: "meta",
      name: "meta.model.getDetail",
      code: "meta.model.getDetail",
      type: "RESTful",
      method: "GET",
      endpoint: "/_meta/models/:namespace/:singularCode",
      actions: [
        {
          code: "getMetaModelDetail",
        },
      ],
    },
    {
      namespace: "meta",
      name: "meta.route.list",
      code: "meta.route.list",
      type: "RESTful",
      method: "GET",
      endpoint: "/_meta/routes",
      actions: [
        {
          code: "listMetaRoutes",
        },
      ],
    },
  ],
} satisfies RpdApplicationConfig;
